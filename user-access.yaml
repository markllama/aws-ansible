---
#
# An instance of an OS is only useful if you can log in and work.
# The first two things you need are an SSH public key and a Security Group
# that allows SSH access to the subnet where the instance resides
#
- name: 
  hosts:
    - localhost

  gather_facts: no
  connection: local

  tasks:
    - name: Create an SSH KeyPair - ansible_user
      amazon.aws.ec2_key:
        name: ansible_user
        key_material: "ssh-ed25519 AAAAC3NzaC1lZDI1NTE5AAAAIH6uOfZiryoRHXpQWZQPj8oC3nD2+FPjZp6hgcbJi5GZ AWS Ansible/Admin Key"
#        tags:
#          Name: infra_admin_user

    - name: Create Security Group - Allow SSH inbound
      block:
        - name: Get VPC ID for Security Group
          amazon.aws.ec2_vpc_net_info:
            filters:
              "tag:Name": infra_services_vpc
          register: infra_vpc

        - name: There must be exactly one matching vpc
          fail:
            msg: "Expected 1 vpc - actual: {{ infra_vpc.vpcs | length }}"
          when: infra_vpc.vpcs | length != 1
            
        - name: Record the vpc ID for later
          set_fact:
            vpc_id: "{{ infra_vpc.vpcs[0].vpc_id }}"

        - name: Report vpc information
          debug:
            msg: "{{ infra_vpc }}"

        - name: Get the Subnet ID
          amazon.aws.ec2_vpc_subnet_info:
            filters:
              "tag:Name": "infra_services_subnet"
          register: infra_subnets

        - name: Record the subnet ID for later
          set_fact:
            subnet_id: "{{ infra_subnets.subnets[0].id }}"

    - name: Create SSH Security Group
      block:
        - name: Create Security Group to allow SSH from the Internet {{ vpc_id }}
          amazon.aws.ec2_security_group:
            name: "infra_sg_ssh"
            description: "Allow SSH from Anywhere"
            vpc_id: "{{ vpc_id }}"
            rules:
              - proto: tcp
                ports:
                  - 22
                cidr_ip: 0.0.0.0/0
                rule_desc: Allow SSH from Anywhere
            tags:
              Name: infra_security_group_ssh
          register: infra_sg

        - name: Record Security Group ID
          set_fact:
            sg_id: "{{ infra_sg.group_id }}"

        - name: Report SSH Security Group
          debug:
            msg: "{{ infra_sg }}"

    - name: Create IAM Role for SSM Agent SSH
      amazon.aws.iam_role:
        name: ssm-ssh-role
        description: "Allow SSM Agent to open SSH sessions on instances"
        state: present
        assume_role_policy_document: "{{ lookup('file', 'files/ssm-assume-role-policy.json') }}"
        managed_policies:
          - arn:aws:iam::aws:policy/AmazonSSMManagedInstanceCore
      register: iam_role_ssm

      # iam_iam_instance-profile
